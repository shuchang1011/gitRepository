<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.microservice</groupId>
  <artifactId>microservice</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>microservice</name>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <junit.version>4.12</junit.version>
    <log4j.version>1.2.17</log4j.version>
    <lombok.version>1.16.18</lombok.version>
  </properties>

  <!--通过它元素来管理jar包的版本，让子项目中引用一个依赖而不用显示的列出版本号
  Maven会沿着父子层次向上走，直到找到一个拥有dependencyManagement元素的项目，
  然后它就会使用在这个dependencyManagement元素中指定的版本号-->
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>Dalston.SR1</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>1.5.9.RELEASE</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>mysql</groupId>
        <artifactId>mysql-connector-java</artifactId>
        <version>8.0.16</version>
      </dependency>
      <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>druid</artifactId>
        <version>1.0.31</version>
      </dependency>
      <dependency>
        <groupId>org.mybatis.spring.boot</groupId>
        <artifactId>mybatis-spring-boot-starter</artifactId>
        <version>1.3.0</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-core</artifactId>
        <version>1.2.3</version>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>${log4j.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <!--定义了如何来编译打包项目
  这里是配置获取配置-->
  <build>
    <finalName>microservice</finalName>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <plugins>
      <!--负责解析配置文件，配置文件就是上述引入的resource资源，这里配置的$开头$结束的字符串可以替换成当前pom文件中的配置属性
      这里的作用就是把resources文件下的application.yml的$project.version$ji解析替换成这里的版本号-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <configuration>
          <delimiters>
            <delimit>$</delimit>
          </delimiters>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <modules>
    <module>microserviceapi</module>
    <module>microservice-Eureka</module>
    <module>microservice-Eureka-7002</module>
    <module>microservice-Eureka-7003</module>
    <module>provider-8001</module>
    <module>provider-8002</module>
    <module>consumer-8001</module>
    <module>consumer-8001-feign</module>
      <module>provider-hystrix</module>
      <module>zuul</module>
      <module>config-server</module>
      <module>config-client</module>
  </modules>

</project>
